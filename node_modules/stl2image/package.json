{
  "name": "stl2image",
  "version": "0.0.1",
  "author": {
    "name": "Daniel Botran"
  },
  "description": "Node.js module for generate image files from STL files",
  "keywords": [
    "stl",
    "3D model",
    "3D printing",
    "stereolithography",
    "stl 2 image",
    "stl 2 png"
  ],
  "homepage": "https://bitbucket.org/dbotran/stl2image",
  "bugs": {
    "url": "https://bitbucket.org/dbotran/stl2image/issues"
  },
  "private": false,
  "repository": {
    "type": "git",
    "url": "https://bitbucket.org/dbotran/stl2image.git"
  },
  "dependencies": {
    "mustache": "0.7.x"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "chai": "~1.9.1",
    "grunt-mocha-test": "~0.10.0",
    "grunt": "~0.4.4",
    "grunt-contrib-coffee": "~0.10.1",
    "grunt-contrib-symlink": "~0.3.0",
    "grunt-contrib-copy": "~0.5.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-htmlmin": "~0.2.0",
    "grunt-contrib-sass": "~0.7.3",
    "grunt-contrib-compass": "~0.7.2",
    "grunt-contrib-requirejs": "~0.4.3",
    "grunt-contrib-qunit": "~0.4.0",
    "grunt-contrib-csslint": "~0.2.0",
    "grunt-contrib-watch": "~0.6.1",
    "grunt-contrib-jst": "~0.6.0",
    "grunt-contrib-cssmin": "~0.9.0",
    "grunt-contrib-jasmine": "~0.6.3",
    "grunt-contrib-uglify": "~0.4.0",
    "grunt-contrib-compress": "~0.7.0",
    "grunt-contrib-stylus": "~0.13.2",
    "grunt-contrib-handlebars": "~0.6.1",
    "grunt-contrib-jshint": "~0.9.2",
    "grunt-contrib-jade": "~0.11.0",
    "grunt-contrib-connect": "~0.7.1",
    "grunt-contrib-nodeunit": "~0.3.3",
    "grunt-contrib-imagemin": "~0.4.1",
    "grunt-contrib-less": "~0.11.0",
    "grunt-contrib-yuidoc": "~0.5.2",
    "grunt-contrib": "~0.10.0"
  },
  "engine": {
    "node": "0.10.x",
    "npm": "1.3.x"
  },
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "grunt"
  },
  "license": "MIT",
  "readme": "# stl2image\r\n\r\nThis library is a fork of https://github.com/cubehero/stljs.\r\n\r\nThe main objective is  to allow you to export stl (stereolitography) to images using pov-ray\r\n\r\n\r\nNote: Currently, the readFile works for both binary and ascii files, but writing\r\nSTL files is only in ASCII\r\n\r\nThis currently only works on node.js, but will expand to browser stl parsing soon\r\n\r\n## How to install\r\n\r\n````\r\nnpm install stl2image\r\n````\r\n\r\nYou need to have installed on your system [Pov-ray ](http://povray.org) (tested for >=3.6)\r\n\r\nIf you're on a mac, you can install it using homebrew.\r\n\r\n````\r\nbrew install povray\r\n````\r\n\r\nIf you're using ubuntu, you can install it using aptitude\r\n\r\n````\r\naptitude install povray\r\n````\r\n\r\nIn Windows, you can download and binary installable from Pov-Ray website.\r\n\r\n## Converting STL to PNG\r\n\r\nSometimes, you want to convert an STL file into a PNG file. To do that, we can \r\n\r\n````\r\nstl2image = require('stljs')\r\n\r\nstl2image.imageify('teapot.stl', { width: 200, height: 100, dst: 'teapot.png' }\r\n  , (err, povOutput, name) ->\r\n    # done with converting the image\r\n  , (err, povPolygon, name) -> \r\n    # called on each polygon is processed\r\n)\r\n````\r\n\r\nNOTE: In order to use this feature, you need to have pov-ray installed on your system\r\nalready. This can be installed separately through 'aptitude' on linux and 'brew'\r\non macs\r\n\r\n## License\r\n\r\nMIT license\r\n",
  "readmeFilename": "README.md",
  "_id": "stl2image@0.0.1",
  "_shasum": "0715ac84eaffd9a7f60c0e017d9fb46cc63cb5fd",
  "_from": "stl2image@",
  "_resolved": "https://registry.npmjs.org/stl2image/-/stl2image-0.0.1.tgz"
}
